{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "information_for_contributors": [
    "PyTV grammar support. Visit docs.rs/pytv for more information."
  ],
  "name": "PyTV",
  "scopeName": "source.pytv",
  "fileTypes": [".pytv"],
  "patterns": [
    {
      "include": "#python_block"
    },
    {
      "include": "#inst"
    },
    {
      "include": "#python_inline"
    },
    {
      "include": "#verilog"
    }
  ],
  "repository": {
    "python_block": {
      "patterns": [
        {
          "begin": "(.*)(\\/\\*\\!\\s*)(.*$)",
          "end": "(.*)(\\*\\/\\s*)(.*$)",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "match": "\\s+",
                  "name": "comment.block.pytv"
                },
                {
                  "match": "\\S+",
                  "name": "invalid.illegal.pytv"
                }
              ]
            },
            "2": {
              "name": "comment.block.pytv"
            },
            "3": {
              "name": "invalid.illegal.pytv"
            }
          },
          "endCaptures": {
            "1": {
              "patterns": [
                {
                  "match": "\\s+",
                  "name": "comment.block.pytv"
                },
                {
                  "match": "\\S+",
                  "name": "invalid.illegal.pytv"
                }
              ]
            },
            "2": {
              "name": "comment.block.pytv"
            },
            "3": {
              "name": "invalid.illegal.pytv"
            }
          },
          "name": "meta.embedded.block.python",
          "patterns": [
            {
              "include": "source.python"
            }
          ]
        }
      ]
    },
    "python_inline": {
      "patterns": [
        {
          "begin": "^(.*)(\\/\\/!)",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "match": "\\s+",
                  "name": "comment.line.double-slash.pytv"
                },
                {
                  "match": "\\S+",
                  "name": "invalid.illegal.pytv"
                }
              ]
            },
            "2": {
              "name": "comment.line.double-slash.pytv"
            }
          },
          "end": "$",
          "name": "meta.embedded.block.python",
          "patterns": [
            {
              "include": "source.python"
            }
          ]
        }
      ]
    },
    "inst": {
      "begin": "(.*)(\\/\\/!)\\s*(<INST>)\\s*(.*$)",
      "beginCaptures": {
        "1": {
          "patterns": [
            {
              "match": "\\s+",
              "name": "comment.line.double-slash.pytv"
            },
            {
              "match": "\\S+",
              "name": "invalid.illegal.pytv"
            }
          ]
        },
        "2": {
          "name": "comment.line.double-slash.pytv"
        },
        "3": {
          "name": "keyword.control.pytv"
        },
        "4": {
          "name": "invalid.illegal.pytv"
        }
      },
      "end": "(.*)(\\/\\/!)\\s*(</INST>)\\s*(.*$)",
      "endCaptures": {
        "1": {
          "patterns": [
            {
              "match": "\\s+",
              "name": "comment.line.double-slash.pytv"
            },
            {
              "match": "\\S+",
              "name": "invalid.illegal.pytv"
            }
          ]
        },
        "2": {
          "name": "comment.line.double-slash.pytv"
        },
        "3": {
          "name": "keyword.control.pytv"
        },
        "4": {
          "name": "invalid.illegal.pytv"
        }
      },
      "patterns": [
        {
          "match": "^\\s*\\/\\/!",
          "name": "comment.line.double-slash.pytv"
        },
        {
          "match": "\\s*(.+)\\s*:\\s*$",
          "captures": {
            "1": {
              "name": "keyword.other.pytv"
            }
          }
        },
        {
          "match": "\\s*(.+)\\s*:\\s*(.+)$",
          "captures": {
            "1": {
              "patterns": [
                {
                  "match": "!.+$",
                  "name": "entity.name.class"
                }
              ],
              "name": "keyword.other.pytv"
            },
            "2": {
              "name": "string.quoted.single.pytv"
            }
          }
        }
      ]
    },
    "verilog": {
      "patterns": [
        {
          "include": "#verilog_comments"
        },
        {
          "include": "#verilog_module_pattern"
        },
        {
          "include": "#verilog_keywords"
        },
        {
          "include": "#verilog_constants"
        }
      ]
    },
    "verilog_comments": {
      "patterns": [
        {
          "begin": "(^[ \\t]+)?(?=//)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.whitespace.comment.leading.verilog.pytv"
            }
          },
          "end": "(?!\\G)",
          "patterns": [
            {
              "begin": "//",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.verilog.pytv"
                }
              },
              "end": "\\n",
              "name": "comment.line.double-slash.verilog.pytv"
            }
          ]
        },
        {
          "begin": "/\\*",
          "end": "\\*/",
          "name": "comment.block.c-style.verilog.pytv"
        }
      ]
    },
    "verilog_constants": {
      "patterns": [
        {
          "match": "[0-9]*'[bBoOdDhH][a-fA-F0-9_xXzZ]+\\b",
          "name": "constant.numeric.sized_integer.verilog.pytv"
        },
        {
          "captures": {
            "1": {
              "name": "constant.numeric.integer.verilog.pytv"
            },
            "2": {
              "name": "punctuation.separator.range.verilog.pytv"
            },
            "3": {
              "name": "constant.numeric.integer.verilog.pytv"
            }
          },
          "match": "\\b(\\d+)(:)(\\d+)\\b",
          "name": "meta.block.numeric.range.verilog.pytv"
        },
        {
          "match": "\\b\\d[\\d_]*(?i:e\\d+)?\\b",
          "name": "constant.numeric.integer.verilog.pytv"
        },
        {
          "match": "\\b\\d+\\.\\d+(?i:e\\d+)?\\b",
          "name": "constant.numeric.real.verilog.pytv"
        },
        {
          "match": "#\\d+",
          "name": "constant.numeric.delay.verilog.pytv"
        },
        {
          "match": "\\b[01xXzZ]+\\b",
          "name": "constant.numeric.logic.verilog.pytv"
        }
      ]
    },
    "verilog_instantiation_patterns": {
      "patterns": [
        {
          "include": "#verilog_keywords"
        },
        {
          "begin": "^\\s*([a-zA-Z][a-zA-Z0-9_]*)\\s+([a-zA-Z][a-zA-Z0-9_]*)(?<!begin|if)\\s*(?=\\(|$)",
          "beginCaptures": {
            "1": {
              "name": "entity.name.tag.module.reference.verilog.pytv"
            },
            "2": {
              "name": "entity.name.tag.module.identifier.verilog.pytv"
            }
          },
          "end": ";",
          "endCaptures": {
            "0": {
              "name": "punctuation.terminator.expression.verilog.pytv"
            }
          },
          "name": "meta.block.instantiation.parameterless.verilog.pytv",
          "patterns": [
            {
              "include": "#verilog_comments"
            },
            {
              "include": "#verilog_keywords"
            },
            {
              "include": "#verilog_constants"
            },
            {
              "include": "#verilog_strings"
            },
            {
              "include": "#verilog_operators"
            }
          ]
        },
        {
          "begin": "^\\s*([a-zA-Z][a-zA-Z0-9_]*)\\s*(#)(?=\\s*\\()",
          "beginCaptures": {
            "1": {
              "name": "entity.name.tag.module.reference.verilog.pytv"
            }
          },
          "end": ";",
          "endCaptures": {
            "0": {
              "name": "punctuation.terminator.expression.verilog.pytv"
            }
          },
          "name": "meta.block.instantiation.with.parameters.verilog.pytv",
          "patterns": [
            {
              "include": "#verilog_parenthetical_list"
            },
            {
              "match": "[a-zA-Z][a-zA-Z0-9_]*",
              "name": "entity.name.tag.module.identifier.verilog.pytv"
            }
          ]
        }
      ]
    },
    "verilog_keywords": {
      "patterns": [
        {
          "match": "\\b(always|and|assign|attribute|begin|buf|bufif0|bufif1|case[xz]?|cmos|deassign|default|defparam|disable|edge|else|end(attribute|case|function|generate|module|primitive|specify|table|task)?|event|for|force|forever|fork|function|generate|genvar|highz(01)|if(none)?|initial|inout|input|integer|join|localparam|medium|module|large|macromodule|nand|negedge|nmos|nor|not|notif(01)|or|output|parameter|pmos|posedge|primitive|pull0|pull1|pulldown|pullup|rcmos|real|realtime|reg|release|repeat|rnmos|rpmos|rtran|rtranif(01)|scalared|signed|small|specify|specparam|strength|strong0|strong1|supply0|supply1|table|task|time|tran|tranif(01)|tri(01)?|tri(and|or|reg)|unsigned|vectored|wait|wand|weak(01)|while|wire|wor|xnor|xor)\\b",
          "name": "keyword.other.verilog.pytv"
        },
        {
          "match": "^\\s*`((cell)?define|default_(decay_time|nettype|trireg_strength)|delay_mode_(path|unit|zero)|ifdef|ifndef|include|end(if|celldefine)|else|(no)?unconnected_drive|resetall|timescale|undef)\\b",
          "name": "keyword.other.compiler.directive.verilog.pytv"
        },
        {
          "begin": "`",
          "end": "`",
          "beginCaptures": {
            "0": {
              "name": "keyword.other.replace.pytv"
            }
          },
          "endCaptures": {
            "0": {
              "name": "keyword.other.replace.pytv"
            }
          },
          "name": "variable.other.constant.pytv"
        },
        {
          "match": "\\$(f(open|close)|readmem(b|h)|timeformat|printtimescale|stop|finish|(s|real)?time|realtobits|bitstoreal|rtoi|itor|(f)?(display|write(h|b)))\\b",
          "name": "support.function.system.console.tasks.verilog.pytv"
        },
        {
          "match": "\\$(random|dist_(chi_square|erlang|exponential|normal|poisson|t|uniform))\\b",
          "name": "support.function.system.random_number.tasks.verilog.pytv"
        },
        {
          "match": "\\$((a)?sync\\$((n)?and|(n)or)\\$(array|plane))\\b",
          "name": "support.function.system.pld_modeling.tasks.verilog.pytv"
        },
        {
          "match": "\\$(q_(initialize|add|remove|full|exam))\\b",
          "name": "support.function.system.stochastic.tasks.verilog.pytv"
        },
        {
          "match": "\\$(hold|nochange|period|recovery|setup(hold)?|skew|width)\\b",
          "name": "support.function.system.timing.tasks.verilog.pytv"
        },
        {
          "match": "\\$(dump(file|vars|off|on|all|limit|flush))\\b",
          "name": "support.function.system.vcd.tasks.verilog.pytv"
        },
        {
          "match": "\\$(countdrivers|list|input|scope|showscopes|(no)?(key|log)|reset(_count|_value)?|(inc)?save|restart|showvars|getpattern|sreadmem(b|h)|scale)",
          "name": "support.function.non-standard.tasks.verilog.pytv"
        }
      ]
    },
    "verilog_module_pattern": {
      "patterns": [
        {
          "begin": "\\b(module)\\s+(([a-zA-Z0-9_]|((?<!{){{[^{}]+}}(?!})))+)",
          "beginCaptures": {
            "1": {
              "name": "storage.type.module.verilog.pytv"
            },
            "2": {
              "name": "entity.name.type.module.verilog.pytv"
            }
          },
          "end": "\\bendmodule\\b",
          "endCaptures": {
            "0": {
              "name": "storage.type.module.verilog.pytv"
            }
          },
          "name": "meta.block.module.verilog.pytv",
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "include": "#keywords"
            },
            {
              "include": "#constants"
            },
            {
              "include": "#strings"
            },
            {
              "include": "#operators"
            }
          ]
        }
      ]
    },
    "verilog_operators": {
      "patterns": [
        {
          "match": "\\+|-|\\*|/|%|(<|>)=?|(!|=)?==?|!|&&?|\\|\\|?|\\^?~|~\\^?",
          "name": "keyword.operator.verilog.pytv"
        }
      ]
    },
    "verilog_parenthetical_list": {
      "patterns": [
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.list.verilog.pytv"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.section.list.verilog.pytv"
            }
          },
          "name": "meta.block.parenthetical_list.verilog.pytv",
          "patterns": [
            {
              "include": "#verilog_comments"
            },
            {
              "include": "#verilog_keywords"
            },
            {
              "include": "#verilog_constants"
            },
            {
              "include": "#verilog_strings"
            }
          ]
        }
      ]
    },
    "verilog_strings": {
      "patterns": [
        {
          "begin": "\"",
          "end": "\"",
          "name": "string.quoted.double.verilog.pytv",
          "patterns": [
            {
              "match": "\\\\.",
              "name": "constant.character.escape.verilog.pytv"
            }
          ]
        }
      ]
    }
  }
}
